```python
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from pages.base_page import BasePage
from locators.signup_locators import SignupPageLocators as Loc

class SignupPage(BasePage):
    def __init__(self, driver):
        # Initialize the SignupPage with the driver from parent class
        super().__init__(driver)
    
    def enterUsername(self, username):
        # Enter username in the username input field
        try:
            self._send_keys(Loc.USERNAME_INPUT, username)
            return True
        except Exception as e:
            print(f"Error entering username: {str(e)}")
            return False
    
    def enterEmail(self, email):
        # Enter email in the email input field
        try:
            self._send_keys(Loc.EMAIL_INPUT, email)
            return True
        except Exception as e:
            print(f"Error entering email: {str(e)}")
            return False
    
    def enterPassword(self, password):
        # Enter password in the password input field
        try:
            self._send_keys(Loc.PASSWORD_INPUT, password)
            return True
        except Exception as e:
            print(f"Error entering password: {str(e)}")
            return False
    
    def clickSignUp(self):
        # Click on the sign up button
        try:
            self._click(Loc.SIGNUP_BUTTON)
            return True
        except Exception as e:
            print(f"Error clicking sign up button: {str(e)}")
            return False
    
    def signup(self, username, email, password):
        # Complete the entire signup process
        try:
            self.enterUsername(username)
            self.enterEmail(email)
            self.enterPassword(password)
            self.clickSignUp()
            return True
        except Exception as e:
            print(f"Error during signup process: {str(e)}")
            return False
    
    def getErrorMessages(self):
        # Get all error messages displayed on the page
        try:
            elements = self._find_elements(Loc.ERROR_MESSAGES)
            return [e.text for e in elements]
        except Exception as e:
            print(f"Error getting error messages: {str(e)}")
            return []
    
    def isSignupPageDisplayed(self):
        # Check if signup page is displayed
        try:
            return self._is_displayed(Loc.SIGNUP_BUTTON)
        except Exception as e:
            print(f"Error checking if signup page is displayed: {str(e)}")
            return False
    
    def navigateToSignupPage(self):
        # Navigate to the signup page
        try:
            self.driver.get("http://localhost:4100/register")
            WebDriverWait(self.driver, 10).until(
                EC.visibility_of_element_located(Loc.SIGNUP_BUTTON)
            )
            return True
        except Exception as e:
            print(f"Error navigating to signup page: {str(e)}")
            return False
```